sqr	equ	$3800

lo	equ	$80
dest	equ	$80
col	equ	$82
pixel	equ	$83
x	equ	$84
y	equ	$86
a	equ	$88
b	equ	$8a

	org	$3b00
main
	mva	#0	lo
	tay
init_sqr
	sta	sqr,y
	tya
	asl	@
	sec
	adc:sta	lo
	lda	#0
	rol	@
	cpy	#$80
	adc	sqr,y
	iny
	bne	init_sqr

	lda	#10
	jsr	$ef90

	ldx	#7
	mva:rpl	colors,x	705,x-

	mwa	#-128	y

	mwa	88	dest
draw_row
	mva	#80	col
	mwa	#0	x

draw_pixel
	mva	#$f0	pixel
	ldx	#3
	mva:rpl	x,x	a,x-

calc_step
	ldx	#2
calc_abs
	ldy	a+1,x
	beq	abs_ok
	iny
	jne	draw_out
	tya
	sub:sta	a,x
abs_ok
	dex:dex
	bpl	calc_abs
; sqr(a) + sqr(b) < 256 ?
	ldx	a
	lda	sqr,x
	ldx	b
	add	sqr,x
	bcs	draw_out

; sqr(abs(a) + abs(b))
	txa
	adc	a
	tax
	lda:tay	#0
	bcc	low_sum
	txa
	asl	@
	iny
low_sum
	adc	sqr,x
	pha
	scc:iny
; sqr(abs(a) - abs(b))
	lda	a
	sub	b
	bcs	diff_ok
	eor	#$ff
	adc	#1
diff_ok
	tax
	pla
	sub	sqr,x
	scs:dey
	ldx	a+1
	cpx	b+1
	beq	b_plus
	eor	#$ff
	add	#1
	pha
	tya
	eor	#$ff
	adc	#0
	tay
	pla
b_plus
	add	y
	pha
	tya
	adc	y+1
	sta	b+1

; sqr(a) - sqr(b)
	ldx	a
	lda	sqr,x
	ldx	b
	sub	sqr,x
	ldx	#0
	scs:dex
	stx	a+1
	asl	@
	rol	a+1
	add	x
	sta	a
	lda	x+1
	adc:sta	a+1

	pla
	sta	b

	inc	pixel
	jne	calc_step
	dec	pixel

draw_out
	lda	(dest),0
:4	asl	@
	eor	#7
	and	pixel
	add	#1
	sta	(dest),y
	ldy	#40
	sta	(dest),y
	ldy	#80
	sta	(dest),y
	ldy	#120
	sta	(dest),y
	lda	col
	lsr	@
	bcc	same_byte
	seq:tya
	eor	#121
	ldx	#dest
	jsr	adw
same_byte
	ldx	#x
	jsr	adw_dx
	dec	col
	jne	draw_pixel
	ldx	#y
	jsr	adw_dx
	lda	dest+1
	cmp	>$bf00
	jcc	draw_row

	jmp	*

adw_dx
	lda	#4	; dx
adw
	add:sta	0,x
	scc:inc	1,x
	rts

colors	dta	$94,$72,$54,$36,$18,$46,$64,$86

	run	main
